---

- name: Get vpc details for "{{ ec2_vpc }}"
  ec2_vpc_net_facts:
    filters:
      "tag:Name": "{{ ec2_vpc }}"
    region: "{{ ec2_region }}"
  register: r_ec2_vpc_app

- debug: 
    var: r_ec2_vpc_app
    verbosity: 4

- name: Get default SG for "{{ ec2_vpc }}"  VPC
  ec2_group_facts:
    filters:
      group-name: default
      vpc_id: "{{ r_ec2_vpc_app.vpcs.0.id }}"
    region: "{{ ec2_region }}"
  register: r_app_default_sg

- name: Remove SSH from lab VPC to default SG for "{{ ec2_vpc }}"
  ec2_group:
    name: default
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_app.vpcs.0.id }}"
    description: default VPC security group
    purge_rules: yes
    rules:
      - proto: all
        group_id: "{{ r_app_default_sg.security_groups.0.group_id }}"

- name: Find peering facts
  ec2_vpc_peering_facts:
    region: "{{ ec2_region }}"
    filters:
      "tag:Name": "{{ ec2_app }}_peering"    
  register: r_vpc_peers

- debug: 
    var: r_vpc_peers
    verbosity: 4

- name: Remove Peering
  ec2_vpc_peer:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_lab_vpc_id }}"
    peering_id: "{{ r_vpc_peers.result.0.vpc_peering_connection_id }}"
    state: absent

- name: Get NAT gateway facts
  ec2_vpc_nat_gateway_facts:
    region: "{{ ec2_region }}"
    filters: 
      vpc-id: "{{ r_ec2_vpc_app.vpcs.0.id }}"
  register: r_nat

- debug:
    var: r_nat
    verbosity: 4

- name: Remove NAT gateway
  ec2_vpc_nat_gateway:
    state: absent
    region: "{{ ec2_region }}"
    nat_gateway_id: "{{ r_nat.result.0.nat_gateway_id }}"
    wait: yes
    release_eip: yes
  when: r_nat.result.0.nat_gateway_id is defined

- name: Find default route table ID for lab VPC
  ec2_vpc_route_table_facts:
    filters:
      vpc-id: "{{ ec2_lab_vpc_id }}"
    region: "{{ ec2_region }}"
  register: r_lab_route

- name: Extract the routes that need to be kept
  set_fact:
    needed_routes: "{{ lookup('routes', r_lab_route.route_tables[0].routes) }}"

- debug:
    var: needed_routes
    verbosity: 4

- name: Remove peering for "{{ r_ec2_vpc_peer.peering_id }}" route for lab VPC
  ec2_vpc_route_table:
    vpc_id:  "{{ ec2_lab_vpc_id }}"
    region: "{{ ec2_region }}"
    lookup: id
    route_table_id: "{{ r_lab_route.route_tables.0.id }}"
    routes: "{{ needed_routes }}"

- pause: 
    seconds: 60
   
- name: Delete VPC "{{ ec2_vpc }}"
  ec2_vpc_net:
    name: "{{ ec2_vpc }}"
    region: "{{ ec2_region }}"
    state: absent
    cidr_block: "{{ ec2_app_cidr}}"
    purge_cidrs: yes
