---
- name: Create a VPC "{{ ec2_vpc }}"
  ec2_vpc_net:
    name: "{{ ec2_vpc }}"
    cidr_block: "{{ ec2_vpc_cidr_prefix }}"
    region: "{{ ec2_region }}"
    state: present
  register: r_ec2_vpc_app

- name: Create a subnet in "{{ ec2_vpc }}"
  ec2_vpc_subnet:
    vpc_id: "{{ r_ec2_vpc_app.vpc.id }}"
    cidr: "{{ ec2_sub_cidr_prefix }}"
    region: "{{ ec2_region }}"
    resource_tags:
      Name: "{{ ec2_subnet_name }}"
    state: present
  register: r_ec2_subnet_app

- name: Peer Lab VPC to "{{ ec2_vpc }}" 
  ec2_vpc_peer:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_lab_vpc_id }}"
    peer_vpc_id: "{{ r_ec2_vpc_app.vpc.id }}"
    state: present
  register: r_ec2_vpc_peer

- name: Accept peering connection from remote account
  ec2_vpc_peer:
    region: "{{ ec2_region }}"
    peering_id: "{{ r_ec2_vpc_peer.peering_id }}"
    state: accept

- name: Get facts for default SG of lab VPC
  ec2_group_facts:
    filters:
      group-name: default
      vpc_id: "{{ ec2_lab_vpc_id }}"
    region: "{{ ec2_region }}"
  register: r_lab_default_sg

- name: Extract SG info
  set_fact: 
    lab_sg: "{{ r_lab_default_sg.security_groups.0 }}"

- name: Get default SG for "{{ ec2_vpc }}"  VPC
  ec2_group_facts:
    filters:
      group-name: default
      vpc_id: "{{ r_ec2_vpc_app.vpc.id }}"
    region: "{{ ec2_region }}"
  register: r_app_default_sg

- name: Add SSH from lab VPC to default SG for "{{ ec2_vpc }}"
  ec2_group:
    name: default
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_app.vpc.id }}"
    description: default VPC security group
    purge_rules: yes
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        group_id: "{{ lab_sg.owner_id }}/{{ lab_sg.group_id }}/{{ lab_sg.group_name }}"
      - proto: all
        group_id: "{{ r_app_default_sg.security_groups.0.group_id }}"

- name: Create route for lab VPC to peering VPC
  ec2_vpc_route_table:
    vpc_id:  "{{ ec2_lab_vpc_id }}"
    region: "{{ ec2_region }}"
    routes:
      - dest: "{{ ec2_sub_cidr_prefix  }}"
        vpc_peering_connection_id: "{{r_ec2_vpc_peer.peering_id }}"
    # subnets:
    #   - 10.0.1.0/24

- name: Create route for app VPC
  ec2_vpc_route_table:
    vpc_id:  "{{ r_ec2_vpc_app.vpc.id }}"
    region: "{{ ec2_region }}"
    routes:
      - dest: 10.0.1.0/24
        vpc_peering_connection_id: "{{ r_ec2_vpc_peer.peering_id }}"
    # subnets:
    #   - "{{ ec2_sub_cidr_prefix }}"

- name: Record needed facts from the newly provisioned infrastructure
  set_fact:
    cat_facts: 
      ec2-vpc_id: "{{ r_ec2_vpc_app.vpc.id }}"
      ec2_subnet_id: "{{ r_ec2_subnet_app.subnet.id }}"
  delegate_to: localhost
  delegate_facts: yes
  run_once: yes






